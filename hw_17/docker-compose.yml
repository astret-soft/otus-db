version: '3.5'

services:

  postgresql:
    container_name: postgresql
    image: postgres:13.2-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
    volumes:
      - pg_volume:/var/lib/postgresql # добавляем volume к папке, где хранится локально вся БД
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d # добавляем директорию со скриптами для инициализации
    ports:
      - 5432:5432

  adminer: # использую adminer, но это необязательно, если расшарить порты от БД PSQL (можно заменить на  dpage/pgadmin4)
    container_name: adminer
    image: adminer:4.8.0
    restart: always
    ports:
      - 8080:8080

  pgbouncer: # pgbouncer с TLS. Генерация ключей в папке certs: openssl req -new -newkey rsa:4096 -x509 -sha512 -days 365 -nodes -out MyCertificate.crt -keyout MyKey.key
    image: edoburu/pgbouncer
    environment:
      - DB_NAME=postgresql
      - DB_HOST=postgresql
      - DB_PASSWORD=s3cret
      - CLIENT_TLS_SSLMODE=require
      - CLIENT_TLS_CERT_FILE=/etc/pgbouncer/certs/MyCertificate.crt
      - CLIENT_TLS_CA_FILE=/etc/pgbouncer/certs/MyCertificate.crt
      - CLIENT_TLS_KEY_FILE=/etc/pgbouncer/certs/MyKey.key
    ports:
      - 6432:5432
    depends_on:
      - postgresql
    volumes:
      - ./certs:/etc/pgbouncer/certs

volumes:
  pg_volume: {}
  c3s_volume: {}
